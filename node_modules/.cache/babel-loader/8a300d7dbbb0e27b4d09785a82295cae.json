{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan_\\\\SignLingo\\\\src\\\\Text.js\";\nimport React, { useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Camera from './Camera';\nconst listOfWords = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\nconst listOfImg = [\"/assets/A.png\", \"/assets/B.png\", \"/assets/C.jpg\", \"/assets/D.png\", \"/assets/E.png\", \"/assets/F.jpg\", \"/assets/G.png\", \"/assets/H.jpeg\", \"/assets/I.png\", \"/assets/J.png\", \"/assets/K.png\", \"/assets/L.jpg\", \"/assets/M.png\", \"/assets/N.png\", \"/assets/O.png\", \"/assets/P.png\", \"/assets/Q.png\", \"/assets/R.png\", \"/assets/S.png\", \"/assets/T.png\", \"/assets/U.png\", \"/assets/V.png\", \"/assets/W.png\", \"/assets/X.png\", \"/assets/Y.png\", \"/assets/Z.png\"];\n\nfunction Text() {\n  var [i, setI] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    columns: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"letter-to-rep\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, listOfWords[i]), /*#__PURE__*/React.createElement(\"img\", {\n    src: listOfImg[i],\n    width: \"200px\",\n    height: \"300px\",\n    alt: \"Sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 89\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-danger\",\n    onClick: () => {\n      if (i === 0) {\n        setI(i = listOfWords.length - 1);\n      } else {\n        setI(i -= 1);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Previous Letter\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-primary\",\n    onClick: () => {\n      if (i === listOfWords.length - 1) {\n        setI(i = 0);\n      } else {\n        setI(i += 1);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Next Letter\")), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Camera, {\n    letter: listOfWords[i],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Text;","map":{"version":3,"sources":["C:/Users/Evan_/SignLingo/src/Text.js"],"names":["React","useState","Grid","Camera","listOfWords","listOfImg","Text","i","setI","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EACpB,GADoB,EACf,GADe,EACV,GADU,EACL,GADK,EACA,GADA,EACK,GADL,EACU,GADV,CAApB;AAGA,MAAMC,SAAS,GACX,CAAC,eAAD,EAAkB,eAAlB,EAAmC,eAAnC,EAAoD,eAApD,EAAqE,eAArE,EAAsF,eAAtF,EAAuG,eAAvG,EAAwH,gBAAxH,EACC,eADD,EACkB,eADlB,EACmC,eADnC,EACoD,eADpD,EACqE,eADrE,EACsF,eADtF,EACuG,eADvG,EACwH,eADxH,EAEC,eAFD,EAEkB,eAFlB,EAEmC,eAFnC,EAEoD,eAFpD,EAEqE,eAFrE,EAEsF,eAFtF,EAEuG,eAFvG,EAEwH,eAFxH,EAEyI,eAFzI,EAE0J,eAF1J,CADJ;;AAMA,SAASC,IAAT,GAAe;AACX,MAAI,CAACC,CAAD,EAAIC,IAAJ,IAAYP,QAAQ,CAAC,CAAD,CAAxB;AAEA,sBACA;AAAK,IAAA,EAAE,EAAG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,EAAE,EAAG,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BG,WAAW,CAACG,CAAD,CAArC,CADF,eAEE;AAAK,IAAA,GAAG,EAAIF,SAAS,CAACE,CAAD,CAArB;AAA0B,IAAA,KAAK,EAAG,OAAlC;AAA0C,IAAA,MAAM,EAAG,OAAnD;AAA2D,IAAA,GAAG,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAE8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9E,eAIE;AAAQ,IAAA,SAAS,EAAG,YAApB;AAAiC,IAAA,OAAO,EAAI,MAAM;AAC1C,UAAIA,CAAC,KAAK,CAAV,EAAY;AACRC,QAAAA,IAAI,CAACD,CAAC,GAAGH,WAAW,CAACK,MAAZ,GAAqB,CAA1B,CAAJ;AAAiC,OADrC,MAEI;AACAD,QAAAA,IAAI,CAACD,CAAC,IAAI,CAAN,CAAJ;AACH;AAAC,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,eAYE;AAAQ,IAAA,SAAS,EAAG,aAApB;AAAkC,IAAA,OAAO,EAAI,MACrC;AAAC,UAAIA,CAAC,KAAKH,WAAW,CAACK,MAAZ,GAAqB,CAA/B,EAAiC;AAC9BD,QAAAA,IAAI,CAACD,CAAC,GAAG,CAAL,CAAJ;AACA,OAFH,MAGG;AACAC,QAAAA,IAAI,CAACD,CAAC,IAAI,CAAN,CAAJ;AACH;AACJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,CADF,eA0BE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEH,WAAW,CAACG,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1BF,CADF,CADF,CADA;AAoCH;;AAED,eAAeD,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport Camera from './Camera';\r\n\r\nconst listOfWords = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \r\n\"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\r\n\r\nconst listOfImg = \r\n    [\"/assets/A.png\", \"/assets/B.png\", \"/assets/C.jpg\", \"/assets/D.png\", \"/assets/E.png\", \"/assets/F.jpg\", \"/assets/G.png\", \"/assets/H.jpeg\",\r\n     \"/assets/I.png\", \"/assets/J.png\", \"/assets/K.png\", \"/assets/L.jpg\", \"/assets/M.png\", \"/assets/N.png\", \"/assets/O.png\", \"/assets/P.png\",\r\n     \"/assets/Q.png\", \"/assets/R.png\", \"/assets/S.png\", \"/assets/T.png\", \"/assets/U.png\", \"/assets/V.png\", \"/assets/W.png\", \"/assets/X.png\", \"/assets/Y.png\", \"/assets/Z.png\"]\r\n\r\n\r\nfunction Text(){\r\n    var [i, setI] = useState(0)\r\n    \r\n    return(\r\n    <div id = \"text\">\r\n      <Grid>\r\n        <Grid.Row columns={2}>\r\n          <Grid.Column>\r\n            <h1 id = \"letter-to-rep\">{listOfWords[i]}</h1>\r\n            <img src = {listOfImg[i]} width = \"200px\" height = \"300px\" alt=\"Sign\"></img><br />\r\n\r\n            <button className = \"btn-danger\" onClick = {() => {\r\n                    if (i === 0){\r\n                        setI(i = listOfWords.length - 1)} \r\n                    else{\r\n                        setI(i -= 1)\r\n                    }}}> \r\n                Previous Letter\r\n            </button>\r\n            <button className = \"btn-primary\" onClick = {() => \r\n                    {if (i === listOfWords.length - 1){\r\n                        setI(i = 0)\r\n                       } \r\n                    else{\r\n                        setI(i += 1)\r\n                    }\r\n                }\r\n            }>\r\n              Next Letter\r\n            </button>\r\n\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Camera letter={listOfWords[i]} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Text"]},"metadata":{},"sourceType":"module"}